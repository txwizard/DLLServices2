//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WizardWrx.DLLConfigurationManager.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WizardWrx.DLLConfigurationManager.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DefaultWindowsEventSourceID.
        /// </summary>
        public static string DEFAULT_EVENT_SOURCE_ID {
            get {
                return ResourceManager.GetString("DEFAULT_EVENT_SOURCE_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument Name    = {0}{1}.
        /// </summary>
        public static string ERRMSG_ARGNAME_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_ARGNAME_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument Value   = {0}{1}.
        /// </summary>
        public static string ERRMSG_ARGVALUE_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_ARGVALUE_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While attempting to identify the subsystem of {0}, GetExeSubsystem returned exit code {1}: {2}.
        /// </summary>
        public static string ERRMSG_ASM_SUBSYSTEM {
            get {
                return ResourceManager.GetString("ERRMSG_ASM_SUBSYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified DLL configuration file, {0}, exists, but is empty.
        /// </summary>
        public static string ERRMSG_CONFIG_FILE_IS_EMPTY {
            get {
                return ResourceManager.GetString("ERRMSG_CONFIG_FILE_IS_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An {0} exception was caught in routine {1}:{3}               Message          = {2}{3}.
        /// </summary>
        public static string ERRMSG_EX_EVTMSG_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_EX_EVTMSG_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An {0} exception was caught in routine {1}:{3}               Message          = {2}{3}.
        /// </summary>
        public static string ERRMSG_EX_MSG_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_EX_MSG_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name        = {0}{1}.
        /// </summary>
        public static string ERRMSG_FILENAME_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_FILENAME_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format String    = {0}{1}.
        /// </summary>
        public static string ERRMSG_FORMATSTRING_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_FORMATSTRING_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HRESULT = {0} ({1} decimal){2}.
        /// </summary>
        public static string ERRMSG_HRESULT {
            get {
                return ResourceManager.GetString("ERRMSG_HRESULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inner Exception:{1}               Message          = {0}{1}.
        /// </summary>
        public static string ERRMSG_INNER {
            get {
                return ResourceManager.GetString("ERRMSG_INNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CORRUPTED SYSTEM REGISTRY: The GetDisplayTimeZone method found the specified key, but the corresponding Registry key is corrupted.{1}                           Specified ID = {0}.
        /// </summary>
        public static string ERRMSG_INV_TZINFO {
            get {
                return ResourceManager.GetString("ERRMSG_INV_TZINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error has occurred.{1}Internal routine GetReservedErrorMessage was called with an invalid ErrorExitOptions value of {0}..
        /// </summary>
        public static string ERRMSG_INVALID_ERROREXITOPTIONS {
            get {
                return ResourceManager.GetString("ERRMSG_INVALID_ERROREXITOPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Method = {0}{1}.
        /// </summary>
        public static string ERRMSG_METHOD {
            get {
                return ResourceManager.GetString("ERRMSG_METHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no valid configuration file for DLL file {0}..
        /// </summary>
        public static string ERRMSG_MISSING_CONFIG_FILE {
            get {
                return ResourceManager.GetString("ERRMSG_MISSING_CONFIG_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SYSTEM RESOURCE FAMINE: The GetDisplayTimeZone method ran out of memory..
        /// </summary>
        public static string ERRMSG_NO_MEMORY {
            get {
                return ResourceManager.GetString("ERRMSG_NO_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EnhancedIOException is unexpectedly null, probably due to an internal error..
        /// </summary>
        public static string ERRMSG_NULL_ENHANCEDIOEXCEPTION {
            get {
                return ResourceManager.GetString("ERRMSG_NULL_ENHANCEDIOEXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INTERNAL ERROR: The GetDisplayTimeZone method let a null pstrTimeZoneID through to TimeZoneInfo.FindSystemTimeZoneById..
        /// </summary>
        public static string ERRMSG_NULL_TZ_ID {
            get {
                return ResourceManager.GetString("ERRMSG_NULL_TZ_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Name      = {0}{1}.
        /// </summary>
        public static string ERRMSG_OBJNAME_TPL {
            get {
                return ResourceManager.GetString("ERRMSG_OBJNAME_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNTIME EXCEPTION: The GetDisplayTimeZone method found the specified key, but the corresponding Registry key is corrupted.{1}                    Specified ID = {0}.
        /// </summary>
        public static string ERRMSG_RUNTIME {
            get {
                return ResourceManager.GetString("ERRMSG_RUNTIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A run-time exception forced the program to end prematurely.{0}Pleasr see he (0) event log for a message with event source = (0)..
        /// </summary>
        public static string ERRMSG_RUNTIME_SEE_EVENT_LOG {
            get {
                return ResourceManager.GetString("ERRMSG_RUNTIME_SEE_EVENT_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A run-time exception forced the program to end prematurely.{0}Please see the message just above this line..
        /// </summary>
        public static string ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE {
            get {
                return ResourceManager.GetString("ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS VIOLATION: The GetDisplayTimeZone method cannot read the Registry keys where the time zone information is kept. The process has insufficient access permissions on that key..
        /// </summary>
        public static string ERRMSG_SECURITY {
            get {
                return ResourceManager.GetString("ERRMSG_SECURITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Source = {0}{1}.
        /// </summary>
        public static string ERRMSG_SOURCE {
            get {
                return ResourceManager.GetString("ERRMSG_SOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The StandardHandleState routine reported an exception.\nException Code = 0x{0} ({1} decimal): {2}.
        /// </summary>
        public static string ERRMSG_STD_HANDLE_STATE {
            get {
                return ResourceManager.GetString("ERRMSG_STD_HANDLE_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INTERNAL or DATA ERROR: The GetDisplayTimeZone method let a pstrTimeZoneID that isn&apos;t registered on this computer through to TimeZoneInfo.FindSystemTimeZoneById.{1}                        Specified ID = {0}.
        /// </summary>
        public static string ERRMSG_TZ_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERRMSG_TZ_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sizes of internal tables s_astrTrimStart and s_astrExceptionTypeNames are unequal.{2}    s_astrTrimStart Elemnent Count          = {0}{2}    s_astrExceptionTypeNames  Elemnent Count = {1}{2}.
        /// </summary>
        public static string ERRMSG_UNBALANCED {
            get {
                return ResourceManager.GetString("ERRMSG_UNBALANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DLL configuration file, {0}.config, which defines the default event source ID string, is missing..
        /// </summary>
        public static string EXCEPTION_DLL_CONFIG_IS_MISSING {
            get {
                return ResourceManager.GetString("EXCEPTION_DLL_CONFIG_IS_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object reference not set to an instance of an object..
        /// </summary>
        public static string EXCEPTION_MESSAGE_NULL_REFERENCE {
            get {
                return ResourceManager.GetString("EXCEPTION_MESSAGE_NULL_REFERENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GetStdHandleFQFN routine supports only character mode (console mode) applications..
        /// </summary>
        public static string MSG_APP_CHARACTER_MODE_APPS_ONLY {
            get {
                return ResourceManager.GetString("MSG_APP_CHARACTER_MODE_APPS_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , NOT redirected.
        /// </summary>
        public static string MSG_CONSOLE_HAS_STD_HANDLE {
            get {
                return ResourceManager.GetString("MSG_CONSOLE_HAS_STD_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly that defines the entry point of the process must call{0}ExtendedProcessInfo.PESubsystemInfo.InitializeInstance before{0}the first StreamStateInfo instance is constructed..
        /// </summary>
        public static string MSG_MUST_INITIALIZE_PESUBSYSTEMINFO {
            get {
                return ResourceManager.GetString("MSG_MUST_INITIALIZE_PESUBSYSTEMINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only assemblies that run in the character mode subsystem are supported.{2}The subsytem ID of the entry assembly is {0} ({1})..
        /// </summary>
        public static string MSG_UNSUPPORTED_PE_SUBSYSTEM {
            get {
                return ResourceManager.GetString("MSG_UNSUPPORTED_PE_SUBSYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subsystem ID must be greater than zero and less than ten..
        /// </summary>
        public static string MSG_XLATE_SUBSYST_INVALID_ID {
            get {
                return ResourceManager.GetString("MSG_XLATE_SUBSYST_INVALID_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputOptions {0}= {1} ({2} decimal = {3}).
        /// </summary>
        public static string OUTPUT_OPTIONS_DISPLAY_FORMAT {
            get {
                return ResourceManager.GetString("OUTPUT_OPTIONS_DISPLAY_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, version {1}.
        /// </summary>
        public static string PRODUCT_NAME_AND_VERSION_TPL {
            get {
                return ResourceManager.GetString("PRODUCT_NAME_AND_VERSION_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}Stack Trace Begin:{1}{0}{1}End of Stack Trace{1}{1}.
        /// </summary>
        public static string STACKTRACE_TPL {
            get {
                return ResourceManager.GetString("STACKTRACE_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Error.
        /// </summary>
        public static string STREAM_NAME_STDERR_LONG {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDERR_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StdError.
        /// </summary>
        public static string STREAM_NAME_STDERR_SHORT {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDERR_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Input.
        /// </summary>
        public static string STREAM_NAME_STDIN_LONG {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDIN_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StdIn.
        /// </summary>
        public static string STREAM_NAME_STDIN_SHORT {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDIN_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Output.
        /// </summary>
        public static string STREAM_NAME_STDOUT_LONG {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDOUT_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StdOut.
        /// </summary>
        public static string STREAM_NAME_STDOUT_SHORT {
            get {
                return ResourceManager.GetString("STREAM_NAME_STDOUT_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Value.
        /// </summary>
        public static string STREAM_NAME_UNSPECIFIED_LONG {
            get {
                return ResourceManager.GetString("STREAM_NAME_UNSPECIFIED_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported.
        /// </summary>
        public static string STREAM_NAME_UNSPECIFIED_SHORT {
            get {
                return ResourceManager.GetString("STREAM_NAME_UNSPECIFIED_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StreamID = {0} ({1}), ConsoleStreamState = {2}, RedirectFileName = {3}.
        /// </summary>
        public static string STREAMSTATEINFO_TOSTRING_TEMPLATE {
            get {
                return ResourceManager.GetString("STREAMSTATEINFO_TOSTRING_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no further exceptions to report.{0}.
        /// </summary>
        public static string THIS_IS_THE_LAST {
            get {
                return ResourceManager.GetString("THIS_IS_THE_LAST", resourceCulture);
            }
        }
    }
}
