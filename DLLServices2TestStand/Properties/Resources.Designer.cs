//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLLServices2TestStand.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DLLServices2TestStand.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, version {1} BOJ{4}{2} ({3} UTC).
        /// </summary>
        public static string BOJ_MSG_TPL {
            get {
                return ResourceManager.GetString("BOJ_MSG_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chop Test {0}: Input String Length  = {1}, Value = {2}{5}             Output String Length = {3}, Value = {4}{5}.
        /// </summary>
        public static string CHOP_TEST_REPORT {
            get {
                return ResourceManager.GetString("CHOP_TEST_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EnumExcpetionGUIDs.
        /// </summary>
        public static string CMDARG_ENUMERATE_EXCEPTION_GUIDS {
            get {
                return ResourceManager.GetString("CMDARG_ENUMERATE_EXCEPTION_GUIDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GenerateExceptionMessageFormatTable.
        /// </summary>
        public static string CMDARG_GENERATE_EXCEPTION_MESSAGE_FORMAT_TABLE {
            get {
                return ResourceManager.GetString("CMDARG_GENERATE_EXCEPTION_MESSAGE_FORMAT_TABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RedirectionDetection.
        /// </summary>
        public static string CMDARG_REDIRECTION_DETECTION {
            get {
                return ResourceManager.GetString("CMDARG_REDIRECTION_DETECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RedirectionStateTests.
        /// </summary>
        public static string CMDARG_REDIRECTION_STATE_TESTS {
            get {
                return ResourceManager.GetString("CMDARG_REDIRECTION_STATE_TESTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2}This text should appear as {0} letters on a {1} background.{2}.
        /// </summary>
        public static string COLOR_MESSAGE_TEXT {
            get {
                return ResourceManager.GetString("COLOR_MESSAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default colors of a {0} exception, as seen through{4}{1}, are {2} text on a {3} background.{4}.
        /// </summary>
        public static string DEFAULT_EXCEPTION_COLORS_MESSAGE {
            get {
                return ResourceManager.GetString("DEFAULT_EXCEPTION_COLORS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the GetDefaultErrorMessageColors method.
        /// </summary>
        public static string DEFAULT_EXCEPTION_COLORS_METHOD_1 {
            get {
                return ResourceManager.GetString("DEFAULT_EXCEPTION_COLORS_METHOD_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the GetDefaultMessageColors method.
        /// </summary>
        public static string DEFAULT_EXCEPTION_COLORS_METHOD_2 {
            get {
                return ResourceManager.GetString("DEFAULT_EXCEPTION_COLORS_METHOD_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to individdual properties.
        /// </summary>
        public static string DEFAULT_EXCEPTION_COLORS_PROPERTIES {
            get {
                return ResourceManager.GetString("DEFAULT_EXCEPTION_COLORS_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} EOJ{2}Running time = {1}{2}Press ENTER to exit the program..
        /// </summary>
        public static string EOJ_MSG_TPL {
            get {
                return ResourceManager.GetString("EOJ_MSG_TPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must belong to the LimitConditon enumeration..
        /// </summary>
        public static string ERRMSG_LIMIT_CONDITON {
            get {
                return ResourceManager.GetString("ERRMSG_LIMIT_CONDITON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must belong to the LimitValue enumeration..
        /// </summary>
        public static string ERRMSG_LIMIT_VALUE {
            get {
                return ResourceManager.GetString("ERRMSG_LIMIT_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ABORTING: Method NewClassTests_20140914.{0} failed, returning a status code of {1}.
        /// </summary>
        public static string ERRMSG_NEW_CLASS_TESTS_20140914 {
            get {
                return ResourceManager.GetString("ERRMSG_NEW_CLASS_TESTS_20140914", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A run-time exception was caught and reported..
        /// </summary>
        public static string ERRMSG_RUNTIME {
            get {
                return ResourceManager.GetString("ERRMSG_RUNTIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing completed without errors..
        /// </summary>
        public static string ERRMSG_SUCCESS {
            get {
                return ResourceManager.GetString("ERRMSG_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fatal.
        /// </summary>
        public static string EXCEPTION_IS_FATAL {
            get {
                return ResourceManager.GetString("EXCEPTION_IS_FATAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to recoverable.
        /// </summary>
        public static string EXCEPTION_IS_RECOVERABLE {
            get {
                return ResourceManager.GetString("EXCEPTION_IS_RECOVERABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Empty String].
        /// </summary>
        public static string MESSAGE_EMPTY_STRING {
            get {
                return ResourceManager.GetString("MESSAGE_EMPTY_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Null String].
        /// </summary>
        public static string MESSAGE_NULL_STRING {
            get {
                return ResourceManager.GetString("MESSAGE_NULL_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}Fully qualified program name, per StateManager GetAssemblyFQFN method = {0}.
        /// </summary>
        public static string MSG_ASBSOLUTE_ASSEMBLYNAME {
            get {
                return ResourceManager.GetString("MSG_ASBSOLUTE_ASSEMBLYNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2}Executable Subsystem = {0}: {1}{2}.
        /// </summary>
        public static string MSG_ASSEMBLY_SUBSYSTEM {
            get {
                return ResourceManager.GetString("MSG_ASSEMBLY_SUBSYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to attached to a console.
        /// </summary>
        public static string MSG_HANDLE_IS_ATTACHED {
            get {
                return ResourceManager.GetString("MSG_HANDLE_IS_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to redirected to a file or pipe.
        /// </summary>
        public static string MSG_HANDLE_IS_REDIRECTED {
            get {
                return ResourceManager.GetString("MSG_HANDLE_IS_REDIRECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unknown.
        /// </summary>
        public static string MSG_HANDLE_IS_UNDEFINED {
            get {
                return ResourceManager.GetString("MSG_HANDLE_IS_UNDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandleBase.
        /// </summary>
        public static string MSG_HANDLEBASE_NULL {
            get {
                return ResourceManager.GetString("MSG_HANDLEBASE_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop Limit Values: Start = {0}{2}                   Stop  = {1}{2}.
        /// </summary>
        public static string MSG_LOOP_LIMIT_VALUES {
            get {
                return ResourceManager.GetString("MSG_LOOP_LIMIT_VALUES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Evaluate loop state with a Equal To Limit:{0}.
        /// </summary>
        public static string MSG_LOOP_STATE_EQ {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_EQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Evaluate loop state with a Greater Than or Equal To Limit:{0}.
        /// </summary>
        public static string MSG_LOOP_STATE_GE {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_GE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Evaluate loop state with a Greater Than Limit:{0}.
        /// </summary>
        public static string MSG_LOOP_STATE_GT {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_GT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Evaluate loop state with a Less Than or Equal To Limit:{0}.
        /// </summary>
        public static string MSG_LOOP_STATE_LE {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_LE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Evaluate loop state with a Less Than Limit:{0}.
        /// </summary>
        public static string MSG_LOOP_STATE_LT {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_LT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{5}{1}{5}{2}{5}{3}{5}{4}{5}.
        /// </summary>
        public static string MSG_LOOP_STATE_TABLE_DATA {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_TABLE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index{0}First{0}Next{0}More{0}Last.
        /// </summary>
        public static string MSG_LOOP_STATE_TABLE_LABELS {
            get {
                return ResourceManager.GetString("MSG_LOOP_STATE_TABLE_LABELS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press ENTER to resume the program..
        /// </summary>
        public static string MSG_PHOTO_OP {
            get {
                return ResourceManager.GetString("MSG_PHOTO_OP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PInvokeW32.
        /// </summary>
        public static string MSG_PINVOKE_WIN32 {
            get {
                return ResourceManager.GetString("MSG_PINVOKE_WIN32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirection State Test Method = {0}: Iterations   = {1}{5}                                            Start Time   = {2}{5}                                            Finish Time  = {3}{5}                                            Elapsed Time = {4}{5}{5}.
        /// </summary>
        public static string MSG_REDIRECTION_STATE_TEST_TIMING {
            get {
                return ResourceManager.GetString("MSG_REDIRECTION_STATE_TEST_TIMING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Public method RegistryValues.RegQueryValue: Key Name   = {0}{4}                                                Value Name = {1}{4}                                                Value Type = {2}{4}                                                Value Data = {3}{4}.
        /// </summary>
        public static string MSG_REG_KEY_VALUE {
            get {
                return ResourceManager.GetString("MSG_REG_KEY_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colors shown below were read from WizardWrx.DllServices2.dll.config.{0}.
        /// </summary>
        public static string MSG_SHOWING_CONFIGURED_COLORS {
            get {
                return ResourceManager.GetString("MSG_SHOWING_CONFIGURED_COLORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}The next screen displays selected properties of the library that is about to be exercised.{0}.
        /// </summary>
        public static string MSG_SHOWING_LIBRARY_INFO {
            get {
                return ResourceManager.GetString("MSG_SHOWING_LIBRARY_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The colors shown below were supplied by the test stand program.{0}.
        /// </summary>
        public static string MSG_SHOWING_PROGRAMMATIC_COLORS {
            get {
                return ResourceManager.GetString("MSG_SHOWING_PROGRAMMATIC_COLORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console handle {0} is {1}{2}.
        /// </summary>
        public static string MSG_STANDARD_HANDLE_STATE {
            get {
                return ResourceManager.GetString("MSG_STANDARD_HANDLE_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Error (STDERR, a. k. a., Console.Error).
        /// </summary>
        public static string MSG_STDERR {
            get {
                return ResourceManager.GetString("MSG_STDERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Input (STDIN, a. k. a., Console.In).
        /// </summary>
        public static string MSG_STDIN {
            get {
                return ResourceManager.GetString("MSG_STDIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Output (STDOUT, a. k. a., Console.Out).
        /// </summary>
        public static string MSG_STDOUT {
            get {
                return ResourceManager.GetString("MSG_STDOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  substrings.
        /// </summary>
        public static string MSG_SUBSTRING_SUMMARY_1 {
            get {
                return ResourceManager.GetString("MSG_SUBSTRING_SUMMARY_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , as follows:.
        /// </summary>
        public static string MSG_SUBSTRING_SUMMARY_2 {
            get {
                return ResourceManager.GetString("MSG_SUBSTRING_SUMMARY_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         Value # {0} = {1}{2}.
        /// </summary>
        public static string MSG_SUBSTRING_VALUE {
            get {
                return ResourceManager.GetString("MSG_SUBSTRING_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unless Idiom Tests Begin:{0}.
        /// </summary>
        public static string MSG_UNLESS_BEGIN {
            get {
                return ResourceManager.GetString("MSG_UNLESS_BEGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Unless Idiom Tests Done!{0}.
        /// </summary>
        public static string MSG_UNLESS_END {
            get {
                return ResourceManager.GetString("MSG_UNLESS_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Boolean Expression = {0}, Unless = {1}.
        /// </summary>
        public static string MSG_UNLESS_WHAT {
            get {
                return ResourceManager.GetString("MSG_UNLESS_WHAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Testing StateManager.GetAssemblyProductAndVersion:{0}.
        /// </summary>
        public static string MSG_VERSIONIFNO_TESTS_BEGIN {
            get {
                return ResourceManager.GetString("MSG_VERSIONIFNO_TESTS_BEGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Entry Assembly product version ({0}, {1} parts) = {2}.
        /// </summary>
        public static string MSG_VERSIONINFO {
            get {
                return ResourceManager.GetString("MSG_VERSIONINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}    Entry Assembly default product version = {0}{1}{1}StateManager.GetAssemblyProductAndVersion Tests Completed{1}.
        /// </summary>
        public static string MSG_VERSIONINFO_TESTS_DONE {
            get {
                return ResourceManager.GetString("MSG_VERSIONINFO_TESTS_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Public method Util.FileMatchesRegExpMask = {0,-5}, for filename = {1} and mask = {2}.
        /// </summary>
        public static string REGEXP_TEST_ALL_BUT_LAST {
            get {
                return ResourceManager.GetString("REGEXP_TEST_ALL_BUT_LAST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Public method Util.FileMatchesRegExpMask = {0,-5}, for filename = {1} and mask = {2}{3}.
        /// </summary>
        public static string REGEXP_TEST_LAST {
            get {
                return ResourceManager.GetString("REGEXP_TEST_LAST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Test Case {0}{1}.
        /// </summary>
        public static string TEST_EXCEPTION_LABEL {
            get {
                return ResourceManager.GetString("TEST_EXCEPTION_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Exception Message Number {0} .
        /// </summary>
        public static string TEST_EXCEPTION_MESSAGE {
            get {
                return ResourceManager.GetString("TEST_EXCEPTION_MESSAGE", resourceCulture);
            }
        }
    }
}
